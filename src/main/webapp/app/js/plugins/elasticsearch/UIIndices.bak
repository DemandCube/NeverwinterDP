define([
  'ui/UITable',
  'plugins/elasticsearch/ESGateway',
  'plugins/elasticsearch/UINodeDetail'
], function(UITable, ESGateway, UINodeDetail) {
  
  var UIIndices = UITable.extend({
    label: "Elasticsearch Indices",
    config: {
      toolbar: {
        dflt: {
          actions: [
            {
              action: "onRefresh", icon: "refresh", label: "Refresh", 
              onClick: function(thisTable) { 
                console.log("on refresh");
              } 
            }
          ]
        }
      },
      
      bean: {
        label: 'Elasticsearch Indices',
        fields: [
          { 
            field: "_name",  label: "Name",toggled: true,
            onClick: function(thisTable, row) {
              var bean = thisTable.getItemOnCurrentPage(row) ;
              //thisTable.UIParent.push(new UINodeDetail( {nodeInfo: bean})) ;
            },
          },
          { 
            field: "promaries.docs",  label: "Documents",toggled: true,
            custom: {
              getDisplay: function(bean) { return  bean.primaries.docs.count ; }
            }
          },
          { 
            field: "primaries.store",  label: "Store",toggled: true,
            custom: {
              getDisplay: function(bean) { return  bean.primaries.store.size_in_bytes ; }
            }
          },
        ]
      }
    },

    onInit: function(options) {
      this.onRefresh() ;
    },

    onRefresh: function() {
      var result = ESGateway.index.indices() ;
      console.printJSON(result) ;
      var indices = [] ;
      for(var key in result.indices) {
        var value = result.indices[key] ;
        value._name = key ;
        indices.push(value) ;
      }
      this.setBeans(indices) ;
    }
  });
  
  return UIIndices ;
});
