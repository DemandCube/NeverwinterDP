## Workflow Diagram ##

Ref: https://cwiki.apache.org/confluence/display/FLINK/Akka+and+Actors
Ref: http://doc.akka.io/docs/akka/2.3.12/java/persistence.html#persistence-java
Ref: https://ci.apache.org/projects/flink/flink-docs-master/setup/config.html
Ref: http://www.warski.org/blog/2013/06/akka-vs-storm/
Ref: http://qosys.info/762/akka-persistence



                    |-----------------------------------------------------------------------
                    |                Flink or Storm or Scribengin                          |
                    |                                                                      |
                    |                                                                      |
                    |                             |---------|                              |
                    |                     |-------| Stream 1|--------------?               |
                    |                     |       | --------|                              |
  |---------|       |   |------------|    |                                                |
  |  Kafka  | . | . | . |   Splitter |----|       |---------|                              |
  |---------|       |   |------------|    |-------| Stream 2|--------------?               |
                    |                     |       |---------|                              |
                    |                     |                                                |
                    |                     |       |---------|                              |    |---------|
                    |                     |-------|  All    | ---------------------------- |----|  Kafka  |
                    |                        \    |---------|                              |    |---------|
                    |                         \                                            |
                    |                           \ ...........                              |
                    |                             .    ?    .                              |
                    |                             ...........                              |
                    |                                                                      |
                    |                                                                      |
                    |----------------------------------------------------------------------|                     



Terminology:

- Data Stream:

A DataStream represents a stream of elements of the same type. A DataStream  can be transformed into another DataStream by applying a transformation operator. For example map, filter, split, join... operators

- Operator:

The interface that allows the developer to custom the logic to tranform, split, join, filter, convert... the elements

registry
  scribengin
    workflows
      workflow
        tasks
        operators
          splitter
            input
              kafka-source(ref)
            output
              splitter-output-internal-queue-stream-1(ref)
              splitter-output-internal-queue-stream-2(ref)
              splitter-output-internal-queue-stream-all(ref)
            operator-task-config
          stream-1
            input
              splitter-output-internal-queue-stream-1(ref)
            output
              stream-1-output-internal-queue-stream(ref)
            operator-task-config
          stream-2
            input
              splitter-output-internal-queue-stream-2(ref)
            output
              stream-2-output-internal-queue-stream(ref)
            operator-task-config
          stream-all
            input
              splitter-output-internal-queue-stream-all(ref)
            output
              stream-2-output-internal-queue-stream(ref)
            operator-task-config
        streams
          kafka-source
            input
              partitions
                partition-1
                  task-triggers
                    splitter-operator-write-commit-task-queue - (commit-1, commit-2, commit-3)
                partition-2
                  task-triggers
                    splitter-operator-write-commit-task-queue - (commit-1, commit-2, commit-3)
                partition-3
                  task-triggers
                    splitter-operator-write-commit-task-queue - (commit-1, commit-2, commit-3)
                splitter-operator-task-config
            output
          splitter-output-internal-queue-stream-1
            input
            output
          splitter-output-internal-queue-stream-2
          splitter-output-internal-queue-stream-all
          stream-1-output-internal-queue-stream
          stream-2-output-internal-queue-stream
          all-output-kafka-queue-stream


Task Registry

  tasks
    available
      task-1
      task-2
      task-3
      task-4
      task-5
      ......
    executions
      executor-1
        heartbeat
        task-1-ref
        task-2-ref
      executor-2
        heartbeat
        task-3-ref
        task-4-ref
      executor-3
        heartbeat
        task-5-ref
        ..........

QueueDataStream
  path: 
  expect-reader:
    reader-1:
    reader-2:
    reader-3:
  reader-cursor:
    reader-1:
      last-position: partition=1, segment=2, sequence=3, position=300M + 512
  partitions
    partition-1
      lock: allow single executor write to the partition at a time
      segments
                       commit -1     broken     commit-2
        segment-1    |-----------|- - - - - - |-------------|  linit  1G per segment
          path:     xyz
          commits:
            commit-1: from 0 - to 128M
            commit-2: from 128M - to 256M
            commit-3: from 256M - to 300M broken
            commit-4: from 300M - to 428M
          expired-time:

                          ok               broken          ok
        segment-2    |--------------| - - - - - - - - |---------------|  limit 1G per segmement
          path:  xyz
          sequences:
            sequence-1: from 0    - to 256M
            sequence-2: from 256M - to 300M broken
            sequence-3: from 300M - to end  
          expired-time:
    partition-2
    partition-3

dataflow
  status
  config

  master

  worker

  operators
    splitter
    info
    warn
    error

  runtime
    activities
    tasks
      available
      finished
      executions
        lock
        assigned
          task-heartbeats
          task-ids

